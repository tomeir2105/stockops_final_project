######################################
# Created by : Meir
# Purpose    : Cleanup Observability & Jenkins resources (keeps PV data) on k3s
# Date       : 2025-10-30
# Version    : 1
######################################
---
- name: "Cleanup Observability & Jenkins resources (keep PV data)"
  hosts: k3s_server
  become: yes
  gather_facts: no
  vars_files:
    - "{{ playbook_dir }}/../vars.yml"

  vars:
    # Ensure the correct SSH key is used for all target nodes
    ansible_ssh_private_key_file: "{{ CONTROLLER_KEY_PATH }}"

    ns: "{{ NAMESPACE | default('observability') }}"
    pv_names:
      - grafana-pv
      - influxdb-pv
      - jenkins-pv

  environment:
    # Use your kubeconfig from vars.yml on the remote host
    KUBECONFIG: "{{ KUBECONFIG }}"

  tasks:
    - name: "Detect kubectl (prefer kubectl, else k3s kubectl)"
      shell: |
        if command -v kubectl >/dev/null 2>&1; then
          echo kubectl
        else
          echo "k3s kubectl"
        fi
      args: { executable: /bin/bash }
      register: kubectl_cmd
      changed_when: false

    - name: "Check if namespace exists"
      shell: |
        {{ kubectl_cmd.stdout }} get ns {{ ns }} --no-headers >/dev/null 2>&1
      args: { executable: /bin/bash }
      register: ns_check
      changed_when: false
      failed_when: false

    - name: "Skip cleanup when namespace is absent"
      when: ns_check.rc != 0
      debug:
        msg: "Namespace {{ ns }} not found â€” skipping namespaced resource cleanup."

    - block:
        - name: "Scale Deployments to zero (stop respawns)"
          shell: >
            {{ kubectl_cmd.stdout }} -n {{ ns }} scale deploy grafana influxdb jenkins
            --replicas=0 --timeout=60s --ignore-not-found
          args: { executable: /bin/bash }
          changed_when: false
          failed_when: false

        - name: "Delete pods for grafana/influxdb/jenkins (fast)"
          shell: >
            {{ kubectl_cmd.stdout }} -n {{ ns }} delete pod
            --selector='app in (grafana,influxdb,jenkins)'
            --ignore-not-found --wait=false
          args: { executable: /bin/bash }
          changed_when: false
          failed_when: false

        - name: "Delete Deployments (ignore if missing)"
          shell: >
            {{ kubectl_cmd.stdout }} -n {{ ns }}
            delete deploy grafana influxdb jenkins --ignore-not-found --wait=true
          args: { executable: /bin/bash }

        - name: "Delete Services (ignore if missing)"
          shell: >
            {{ kubectl_cmd.stdout }} -n {{ ns }}
            delete svc grafana grafana-nodeport influxdb influxdb-nodeport jenkins
            --ignore-not-found --wait=true
          args: { executable: /bin/bash }

        - name: "Delete Secrets (ignore if missing)"
          shell: >
            {{ kubectl_cmd.stdout }} -n {{ ns }}
            delete secret grafana-admin influxdb-secrets --ignore-not-found --wait=true
          args: { executable: /bin/bash }

        - name: "Delete ConfigMaps (ignore if missing)"
          shell: >
            {{ kubectl_cmd.stdout }} -n {{ ns }}
            delete configmap grafana-datasources --ignore-not-found --wait=true
          args: { executable: /bin/bash }

        - name: "Delete PVCs (ignore if missing)"
          shell: >
            {{ kubectl_cmd.stdout }} -n {{ ns }}
            delete pvc grafana-pvc influxdb-pvc jenkins-pvc --ignore-not-found --wait=true
          args: { executable: /bin/bash }
          register: pvc_delete
          failed_when: false

        - name: "Wait briefly after

