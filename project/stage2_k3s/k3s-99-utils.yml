######################################
# Created by : Meir
# Purpose    : Common utilities for k3s plays (safe APT prep, base tools, time sync)
# Date       : 2025-10-30
# Version    : 2
######################################
---
# NOTE: This is a task include file (use with `import_tasks:`), not a standalone play.

# --- Debian/Ubuntu: avoid apt lock races (presence-aware) ---------------------
- name: (Debian) Gather service facts
  ansible.builtin.service_facts:
  when: ansible_os_family == "Debian"

- name: (Debian) Stop unattended APT services/timers if present
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: stopped
  loop:
    - apt-daily.service
    - apt-daily-upgrade.service
    - unattended-upgrades.service
    - unattended-upgrades.timer
  when:
    - ansible_os_family == "Debian"
    - item in (ansible_facts.services | default({}))
  failed_when: false

- name: (Debian) Wait for APT locks to be free
  ansible.builtin.shell: |
    set -e
    for f in /var/lib/dpkg/lock-frontend /var/lib/apt/lists/lock; do
      if fuser "$f" >/dev/null 2>&1; then exit 1; fi
    done
  register: _apt_lockcheck
  retries: 30
  delay: 2
  until: _apt_lockcheck.rc == 0
  changed_when: false
  when: ansible_os_family == "Debian"

# --- APT networking hardening (prefer IPv4, timeouts) -------------------------
- name: (Debian) Force APT IPv4 + timeouts/retries
  ansible.builtin.copy:
    dest: /etc/apt/apt.conf.d/99-network-tighten.conf
    mode: "0644"
    content: |
      Acquire::ForceIPv4 "true";
      Acquire::Retries "2";
      Acquire::http::Timeout "10";
      Acquire::https::Timeout "10";
      Acquire::ftp::Timeout "10";
  when: ansible_os_family == "Debian"

# Preflight: only refresh cache if outbound IPv4 to Debian mirror works
- name: (Debian) DNS resolve deb.debian.org (IPv4 required)
  ansible.builtin.command: getent ahostsv4 deb.debian.org
  register: _deb_dns_v4
  changed_when: false
  failed_when: false
  when: ansible_os_family == "Debian"

- name: (Debian) Probe HTTP to Debian mirror (IPv4, quick timeout)
  ansible.builtin.command: >
    curl -I -4 --connect-timeout 3 --max-time 5 http://deb.debian.org/debian/
  register: _deb_http_probe
  changed_when: false
  failed_when: false
  when: ansible_os_family == "Debian"

- name: (Debian) apt-get update (cache) â€” only when probe OK
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 600
    force_apt_get: yes
  when:
    - ansible_os_family == "Debian"
    - _deb_dns_v4 is defined and _deb_dns_v4.rc == 0
    - _deb_http_probe is defined and _deb_http_probe.rc == 0

# --- Base tools ---------------------------------------------------------------
- name: Ensure base tools installed (Debian/Ubuntu)
  ansible.builtin.apt:
    name:
      - curl
      - ca-certificates
    state: present
    force_apt_get: yes
  when: ansible_os_family == "Debian"

- name: Ensure base tools installed (non-Debian)
  ansible.builtin.package:
    name:
      - curl
      - ca-certificates
    state: present
  when: ansible_os_family != "Debian"

# --- Time sync (TLS sanity) ---------------------------------------------------
- name: Ensure time sync service present (Debian/Ubuntu)
  ansible.builtin.apt:
    name: systemd-timesyncd
    state: present
    force_apt_get: yes
  when: ansible_os_family == "Debian"

- name: Ensure time sync service is running
  ansible.builtin.systemd:
    name: systemd-timesyncd
    state: started
    enabled: yes
  failed_when: false  # tolerate distros without this unit

# --- Quick diagnostics (optional, no change) ----------------------------------
- name: Show hostname and IPv4/IPv6 defaults (debug only)
  ansible.builtin.shell: |
    set -e
    echo "host={{ inventory_hostname }}"
    ip -4 route show default || true
    ip -6 route show default || true
  register: _net_defaults
  changed_when: false

- name: Print network defaults
  ansible.builtin.debug:
    var: _net_defaults.stdout_lines

