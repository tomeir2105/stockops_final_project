---
# Install k3s SERVER only
- name: Install k3s server if missing
  hosts: k3s_server
  become: yes
  vars:
    k3s_server_ip: "{{ hostvars[inventory_hostname].ansible_host | default(inventory_hostname) }}"
    k3s_async_timeout: 1800   # 30m
    k3s_poll_interval: 10
  environment:
    DEBIAN_FRONTEND: noninteractive

  pre_tasks:
    - name: Common bootstrap
      import_tasks: "{{ playbook_dir }}/k3s-99-utils.yml"
    - name: Check if k3s server unit exists
      stat:
        path: /etc/systemd/system/k3s.service
      register: k3s_unit

    - name: Check HTTPS connectivity to get.k3s.io (server, with retries)
      command: curl -sS --head https://get.k3s.io
      register: https_check_srv
      changed_when: false
      retries: 5
      delay: 5
      until: https_check_srv.rc == 0
      when: not k3s_unit.stat.exists

    - name: Install k3s server (async)
      shell: |
        set -e
        curl -sfL https://get.k3s.io | \
          K3S_KUBECONFIG_MODE=644 \
          INSTALL_K3S_EXEC="server" \
          sh -
      args:
        executable: /bin/bash
      when: not k3s_unit.stat.exists
      async: "{{ k3s_async_timeout }}"
      poll: "{{ k3s_poll_interval }}"
      register: k3s_server_install

    - name: Ensure k3s server is enabled and started
      systemd:
        name: k3s
        state: started
        enabled: yes
        daemon_reload: yes

    - name: Wait until k3s service is active
      shell: systemctl is-active k3s
      register: k3s_active
      retries: 60
      delay: 5
      changed_when: false
      until: k3s_active.stdout.strip() == "active"

    - name: Check if node-token already exists
      stat:
        path: /var/lib/rancher/k3s/server/node-token
      register: token_stat

    - name: Wait for node-token to appear (fresh install only)
      wait_for:
        path: /var/lib/rancher/k3s/server/node-token
        state: present
        timeout: 300
      when: not token_stat.stat.exists

    - name: Wait for API to listen on 6443
      wait_for:
        host: "{{ k3s_server_ip }}"
        port: 6443
        state: started
        delay: 2
        timeout: 300

